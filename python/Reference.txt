#Python Introduction
    1) It is free,open-source, multi-threaded, loosly-typed, dynamic server-side scripting langauge.
    2) It is cross-platform, prototype-based, multi-paradigm,high-level scripting language.
    3) It is functional, object-oriented,imperative,procedural and structured scripting langauge.
    4) It's used  to Web development,Software development, mathematics, system scripting,automation.
    5) Developed by " Guido van Rossum ".
#Python Engines
    1) Python is interpreted high level programming language.
#Python Popular Frameworks
    1) Django, TurboGears, Web2py, Falcon, Flask.
#Python Extension
    1) save file with ".py" extension.
#What Python do?
    1) Create dynamic web application.
    2) Create Desktop and System Software.
    3) It's manipulating data on the databases.
    4) Handle bigdata and perform complex mathematics.
    5) Production ready software development,
    6) Artificial Intelligence and Robot Engineering.
#-------------------------------------------------------------------------------#
#Python Data Types
    1) Text - str
    2) Numeric - int, float, complex
    3) Boolean - bool 
    4) Sequenece - list, tuple, range
    5) Mapping - dict
    6) Set - set, frozenset
    7) Binary - bytes, bytearray, memoryview
#-------------------------------------------------------------------------------#
#Python Keywords
1) if       9) false    16) is          25) from        33) global
2) else     10) none    17) def         26) try         34) non-local
3) elif     11) and     18) class       27) expect      35) del
4) for      12) or      19) with        28) raise
5) while    13) not     20) pass        29) finally
6) break    14) as      21) lambda      30) assert
7) continue 15) in      22) return      31) async
8) true     23) yield   24) import      32) await
#-------------------------------------------------------------------------------#
#Python Identifiers and Rules
An identifier is the name by which we identify variable, a function, a class, a module, or any other object.

1) Identifier are case-sensitive.
2) variable must begin with a alphabets[a-z|A-Z] OR underscore[_].
3) variable can contain aplha-numeric[a-z|A-Z|0-9] AND underscore[_].
5) variable can not contain Keywords.
6) variable can not contain whitespaces.
7) variable can not contain special symbol.
8) Math operations rule-> Multiplication | Division | Addition | Subtraction.
9) Prefered to use Snake_case,camelCase OR PascalCase.
#-------------------------------------------------------------------------------#
#Python Operators
Arithmetic operators[+,-,*,/,//,%,++,--,**].
Comparison operators[==,!=,===,!==,>,>=,<,<=].
Bitwise operators[&,|,~,^,<<,>>,>>>].
Logical operators[&&,||,!,AND,OR,NOT]
Assignment operators[=,+=,-=,*=,/=,//=,%=,**=, <<=,>>=,&=,|=,^=,&&=,||=,??=].
Ternary operator(Conditional)[condition ? val1 : val2].
Special operators[is, is not].
Membership operators[in,not in].
#-------------------------------------------------------------------------------#
#Python Literals
1) Numeric Literals
    1.1) Decimal[Base 10] are define as normal integer.-->{[0-9]}.
    1.2) Octal[Base 8] are define a leading zero[0] and alphabet[o]-->{0o[1-7]}.
    1.3) Hexadecimal[0-9,A-F] are defined a leading zero+x[0x].-->{0x[0-9,A-F]}.
    1.4) Binary {Base 0-1} are defined a leading zero and aplhabets[b].-->{0b[0-1]}.
2) String Literal
    2.1) String will be declare double OR single quote.{"string", 'string'}.
    2.2) Multiline string be declare triple quotes{""" Multiline_str"""}.
    2.3) String will be concatenated with unary plus sign(+). 
3) Collections Literal
    3.1) List will be defined in Square Bracket{[]}.
            -->["A","B","C","D"].
    3.2) Tuple will be defined in Parentheses {()}.
            -->("A',"B","C","D").
    3.3) Dictionary will be defined in Curly Braces[{}] with key value pairs. 
            -->{"a":"Apple", "B":"Ball","c":"Cat"}.
    3.4) Set will be defined in Curly Braces[{}]. 
            -->{"A","B","C","D"}.
#-------------------------------------------------------------------------------#
#Python Comments
1) Single line (#).
2) Multiline ("""......""").
#-------------------------------------------------------------------------------#
#Python Errors Types
1) Syntax error
2) Logical error(Exceptions).
#-------------------------------------------------------------------------------#       
#Python Decision Making Statement
A) Conditional Making

1) Initializer; 
if(condition): //code to run if condition is true

2) Initializer;
if(condition): //code to run if condition is true
    else: //code to run if condition is false

3) Initializer; 
if(condition): //code to run if condition is true
    elif(condition): //code to run if condition is true
    else: //code to run if condition is false

B) Loops Making

1) Initializer;
for val in squence : //code to run if condition is true

2)Initializer; 
for val in squence : //code to run if condition is true
    else : //code to run if condition is false

3) Initializer; 
while(condition): //code to run if condition is true
            //final-expression[increment/decrement]

4) Initializer; 
while(condition): //code to run if condition is true
            //final-expression[increment/decrement]
else: //code to run if condition is true
#-------------------------------------------------------------------------------#
